apiVersion: /v1
kind: Service
metadata:
  name: haproxy-service
  namespace: redis-test
spec:
  type: ClusterIP
  ports:
    - name: dashboard
      port: 8080
      targetPort: 8080
    - name: redis-write
      port: 6379
      targetPort: 6379
    - name: redis-read
      port: 6380
      targetPort: 6380
  selector:
    app: haproxy
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-config
  namespace: redis-test
data:
  haproxy.cfg: |
    global
    	daemon
    	maxconn 256
    
    defaults
    	mode tcp
    	timeout connect 5000ms
    	timeout client 50000ms
    	timeout server 50000ms
    
    
    frontend http
    	bind :8080
    	default_backend stats
    
    
    backend stats
    	mode http
    	stats enable
    
    	stats enable
    	stats uri /
    	stats refresh 1s
    	stats show-legends
    	stats admin if TRUE
    
    resolvers k8s
      parse-resolv-conf
      hold other           10s
      hold refused         10s
      hold nx              10s
      hold timeout         10s
      hold valid           10s
      hold obsolete        10s
    
    frontend redis-read
    	bind *:6380
        default_backend redis-online
    
    
    frontend redis-write
        bind *:6379
    	default_backend redis-primary
    
    
    backend redis-primary
    	mode tcp
    	balance first
    	option tcp-check
    	tcp-check send AUTH\ a-very-complex-password-here\r\n
    	tcp-check expect string +OK
    	tcp-check send info\ replication\r\n
    	tcp-check expect string role:master
      server-template redis 3 _redis._tcp.redis-headless.redis-test.svc.cluster.local:6379 check inter 1s resolvers k8s init-addr none
    
    
    backend redis-online
    	mode tcp
    	balance roundrobin
    	option tcp-check
    	tcp-check send AUTH\ a-very-complex-password-here\r\n
    	tcp-check expect string +OK
    	tcp-check send PING\r\n
    	tcp-check expect string +PONG
      server-template redis 3 _redis._tcp.redis-headless.redis-test.svc.cluster.local:6379 check inter 1s resolvers k8s init-addr none
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: haproxy-deployment
  namespace: redis-test
  labels:
    app: haproxy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: haproxy
  template:
    metadata:
      name: haproxy-pod
      labels:
        app: haproxy
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                    - haproxy
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: haproxy
          image: haproxy:2.3
          ports:
            - containerPort: 8080
            - containerPort: 6379
            - containerPort: 6380
          volumeMounts:
          - name: config
            mountPath: /usr/local/etc/haproxy/haproxy.cfg
            subPath: haproxy.cfg
            readOnly: true
      restartPolicy: Always
      volumes:
      - name: config
        configMap:
          name: haproxy-config

